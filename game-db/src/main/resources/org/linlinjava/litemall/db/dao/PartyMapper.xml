<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.PartyMapper">
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.Party">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="announce" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="level" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="construction" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="creator" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="member" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="request_join" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, announce, level, construction, creator, member, request_join
  </sql>
  <select id="selectByExample" parameterType="org.linlinjava.litemall.db.domain.PartyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from party
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from party
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.PartyExample">
    delete from party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.Party">
    insert into party (id, name, announce, 
      level, construction, creator, 
      member, request_join)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{announce,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{construction,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, 
      #{member,jdbcType=VARCHAR}, #{requestJoin,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.Party">
    insert into party
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="announce != null">
        announce,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="construction != null">
        construction,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="member != null">
        member,
      </if>
      <if test="requestJoin != null">
        request_join,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="announce != null">
        #{announce,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="construction != null">
        #{construction,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="member != null">
        #{member,jdbcType=VARCHAR},
      </if>
      <if test="requestJoin != null">
        #{requestJoin,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.PartyExample" resultType="java.lang.Long">
    select count(*) from party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update party
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.announce != null">
        announce = #{record.announce,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.construction != null">
        construction = #{record.construction,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.member != null">
        member = #{record.member,jdbcType=VARCHAR},
      </if>
      <if test="record.requestJoin != null">
        request_join = #{record.requestJoin,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update party
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      announce = #{record.announce,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      construction = #{record.construction,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      member = #{record.member,jdbcType=VARCHAR},
      request_join = #{record.requestJoin,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.Party">
    update party
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="announce != null">
        announce = #{announce,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="construction != null">
        construction = #{construction,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="member != null">
        member = #{member,jdbcType=VARCHAR},
      </if>
      <if test="requestJoin != null">
        request_join = #{requestJoin,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.Party">
    update party
    set name = #{name,jdbcType=VARCHAR},
      announce = #{announce,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      construction = #{construction,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      member = #{member,jdbcType=VARCHAR},
      request_join = #{requestJoin,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>