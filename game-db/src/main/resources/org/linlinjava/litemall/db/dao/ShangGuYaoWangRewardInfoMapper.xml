<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.ShangGuYaoWangRewardInfoMapper">
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.ShangGuYaoWangRewardInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="account_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="characters_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="date_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="date" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="yao_wang_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_id, characters_id, reward, date_time, date, yao_wang_id
  </sql>
  <select id="selectByExample" parameterType="org.linlinjava.litemall.db.domain.example.ShangGuYaoWangRewardInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shang_gu_yao_wang_reward_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shang_gu_yao_wang_reward_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shang_gu_yao_wang_reward_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.example.ShangGuYaoWangRewardInfoExample">
    delete from shang_gu_yao_wang_reward_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.ShangGuYaoWangRewardInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into shang_gu_yao_wang_reward_info (account_id, characters_id,
      reward, date_time, date, 
      yao_wang_id)
    values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{charactersId,jdbcType=INTEGER}, 
      #{reward,jdbcType=VARCHAR}, #{dateTime,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, 
      #{yaoWangId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.ShangGuYaoWangRewardInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into shang_gu_yao_wang_reward_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="charactersId != null">
        characters_id,
      </if>
      <if test="reward != null">
        reward,
      </if>
      <if test="dateTime != null">
        date_time,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="yaoWangId != null">
        yao_wang_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="charactersId != null">
        #{charactersId,jdbcType=INTEGER},
      </if>
      <if test="reward != null">
        #{reward,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="yaoWangId != null">
        #{yaoWangId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.example.ShangGuYaoWangRewardInfoExample" resultType="java.lang.Long">
    select count(*) from shang_gu_yao_wang_reward_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shang_gu_yao_wang_reward_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.charactersId != null">
        characters_id = #{record.charactersId,jdbcType=INTEGER},
      </if>
      <if test="record.reward != null">
        reward = #{record.reward,jdbcType=VARCHAR},
      </if>
      <if test="record.dateTime != null">
        date_time = #{record.dateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.yaoWangId != null">
        yao_wang_id = #{record.yaoWangId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shang_gu_yao_wang_reward_info
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      characters_id = #{record.charactersId,jdbcType=INTEGER},
      reward = #{record.reward,jdbcType=VARCHAR},
      date_time = #{record.dateTime,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      yao_wang_id = #{record.yaoWangId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.ShangGuYaoWangRewardInfo">
    update shang_gu_yao_wang_reward_info
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="charactersId != null">
        characters_id = #{charactersId,jdbcType=INTEGER},
      </if>
      <if test="reward != null">
        reward = #{reward,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        date_time = #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="yaoWangId != null">
        yao_wang_id = #{yaoWangId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.ShangGuYaoWangRewardInfo">
    update shang_gu_yao_wang_reward_info
    set account_id = #{accountId,jdbcType=INTEGER},
      characters_id = #{charactersId,jdbcType=INTEGER},
      reward = #{reward,jdbcType=VARCHAR},
      date_time = #{dateTime,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      yao_wang_id = #{yaoWangId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="org.linlinjava.litemall.db.domain.example.ShangGuYaoWangInfoExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shang_gu_yao_wang_reward_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
</mapper>